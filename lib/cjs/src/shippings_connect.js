"use strict";
// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file shippings.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShippingsService = void 0;
const shippings_pb_js_1 = require("./shippings_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the methods applicable on each shipping
 *
 * @generated from service scanswift.ShippingsService
 */
exports.ShippingsService = {
    typeName: "scanswift.ShippingsService",
    methods: {
        /**
         * Create a shipping
         *
         * // Update a shipping
         * rpc Update (ShippingsServiceUpdateRequest) returns (Shipping);
         *
         * @generated from rpc scanswift.ShippingsService.Create
         */
        create: {
            name: "Create",
            I: shippings_pb_js_1.ShippingsServiceCreateRequest,
            O: shippings_pb_js_1.Shipping,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Close the shipping
         *
         * @generated from rpc scanswift.ShippingsService.Close
         */
        close: {
            name: "Close",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Archive the shipping
         *
         * @generated from rpc scanswift.ShippingsService.Archive
         */
        archive: {
            name: "Archive",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Restore the shipping
         *
         * @generated from rpc scanswift.ShippingsService.Restore
         */
        restore: {
            name: "Restore",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Recall the shipping
         *
         * @generated from rpc scanswift.ShippingsService.Recall
         */
        recall: {
            name: "Recall",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by UUID
         *
         * @generated from rpc scanswift.ShippingsService.ViewByUUID
         */
        viewByUUID: {
            name: "ViewByUUID",
            I: base_pb_js_1.Identifier,
            O: shippings_pb_js_1.Shipping,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by Code
         *
         * @generated from rpc scanswift.ShippingsService.ViewByCode
         */
        viewByCode: {
            name: "ViewByCode",
            I: base_pb_js_1.SearchKeyRequest,
            O: shippings_pb_js_1.Shipping,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View the metadata using the shipping code
         *
         * @generated from rpc scanswift.ShippingsService.ViewMetadataByCode
         */
        viewMetadataByCode: {
            name: "ViewMetadataByCode",
            I: base_pb_js_1.SearchKeyRequest,
            O: shippings_pb_js_1.ShippingMetadata,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all shippings
         *
         * @generated from rpc scanswift.ShippingsService.ViewAll
         */
        viewAll: {
            name: "ViewAll",
            I: base_pb_js_1.ActiveInEntityRequest,
            O: shippings_pb_js_1.ShippingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View shippings with pagination
         *
         * @generated from rpc scanswift.ShippingsService.ViewWithPagination
         */
        viewWithPagination: {
            name: "ViewWithPagination",
            I: shippings_pb_js_1.ShippingsServicePaginationReq,
            O: shippings_pb_js_1.ShippingPaginationResp,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View as QR code
         *
         * @generated from rpc scanswift.ShippingsService.ViewAsQR
         */
        viewAsQR: {
            name: "ViewAsQR",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.ImageResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View as DataMatrix
         *
         * @generated from rpc scanswift.ShippingsService.ViewAsDataMatrix
         */
        viewAsDataMatrix: {
            name: "ViewAsDataMatrix",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.ImageResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View as Image on the basis of the product's configuration
         *
         * @generated from rpc scanswift.ShippingsService.ViewAsImage
         */
        viewAsImage: {
            name: "ViewAsImage",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.ImageResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View the shipping's URI
         *
         * @generated from rpc scanswift.ShippingsService.ViewAsURI
         */
        viewAsURI: {
            name: "ViewAsURI",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.URLResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View the string that can be used to render the QR code on POS machines
         *
         * @generated from rpc scanswift.ShippingsService.ViewPrintableString
         */
        viewPrintableString: {
            name: "ViewPrintableString",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.StringResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Download the shipping as a PDF
         *
         * @generated from rpc scanswift.ShippingsService.DownloadAsPDF
         */
        downloadAsPDF: {
            name: "DownloadAsPDF",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.FileResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Download the shipping as an image
         *
         * @generated from rpc scanswift.ShippingsService.DownloadAsImage
         */
        downloadAsImage: {
            name: "DownloadAsImage",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.FileResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given search key
         *
         * @generated from rpc scanswift.ShippingsService.SearchAll
         */
        searchAll: {
            name: "SearchAll",
            I: shippings_pb_js_1.ShippingsServiceSearchAllReq,
            O: shippings_pb_js_1.ShippingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given filter criteria
         *
         * @generated from rpc scanswift.ShippingsService.Filter
         */
        filter: {
            name: "Filter",
            I: shippings_pb_js_1.ShippingsServiceFilterReq,
            O: shippings_pb_js_1.ShippingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Count
         *
         * @generated from rpc scanswift.ShippingsService.Count
         */
        count: {
            name: "Count",
            I: base_pb_js_1.CountInEntityRequest,
            O: base_pb_js_1.CountResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Add list of packagings to a shipping
         *
         * @generated from rpc scanswift.ShippingsService.AddPackagings
         */
        addPackagings: {
            name: "AddPackagings",
            I: shippings_pb_js_1.ShippingsServiceAddPackagingsRequest,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Remove packaging (represented by the UUID of the associated shipping packaging) from shipping and return the removed identifier
         *
         * @generated from rpc scanswift.ShippingsService.RemovePackaging
         */
        removePackaging: {
            name: "RemovePackaging",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all packagings associated with the shipping represented by the Identifier
         *
         * @generated from rpc scanswift.ShippingsService.ViewPackagings
         */
        viewPackagings: {
            name: "ViewPackagings",
            I: base_pb_js_1.Identifier,
            O: shippings_pb_js_1.ShippingsPackagingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Count all packagings within a shipping
         *
         * @generated from rpc scanswift.ShippingsService.CountPackagings
         */
        countPackagings: {
            name: "CountPackagings",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.CountResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
