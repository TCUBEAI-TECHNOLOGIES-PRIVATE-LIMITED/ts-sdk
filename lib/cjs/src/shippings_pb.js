"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file shippings.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShippingsServiceSearchAllReq = exports.ShippingsServiceFilterReq = exports.ShippingPaginationResp = exports.ShippingsServicePaginationReq = exports.ShippingsPackagingsList = exports.ShippingPackaging = exports.ShippingsServiceAddPackagingRequest = exports.ShippingsServiceAddPackagingsRequest = exports.ShippingsList = exports.ShippingMetadata = exports.Shipping = exports.ShippingsServiceCreateRequest = exports.SHIPPING_SORT_KEY = exports.PRINT_ENCODING_TYPE_FOR_SHIPPING = exports.SHIPPING_STATE = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
const locations_pb_js_1 = require("./locations_pb.js");
const entities_pb_js_1 = require("./entities_pb.js");
/**
 *
 * Describes the available states for a shipping
 *
 * @generated from enum scanswift.SHIPPING_STATE
 */
var SHIPPING_STATE;
(function (SHIPPING_STATE) {
    /**
     * Shipping is any (only useful for filter requests)
     *
     * @generated from enum value: SHIPPING_STATE_ANY_UNSPECIFIED = 0;
     */
    SHIPPING_STATE[SHIPPING_STATE["SHIPPING_STATE_ANY_UNSPECIFIED"] = 0] = "SHIPPING_STATE_ANY_UNSPECIFIED";
    /**
     * Shipping is open
     *
     * @generated from enum value: SHIPPING_STATE_OPEN = 1;
     */
    SHIPPING_STATE[SHIPPING_STATE["SHIPPING_STATE_OPEN"] = 1] = "SHIPPING_STATE_OPEN";
    /**
     * Shipping is closed
     *
     * @generated from enum value: SHIPPING_STATE_CLOSED = 2;
     */
    SHIPPING_STATE[SHIPPING_STATE["SHIPPING_STATE_CLOSED"] = 2] = "SHIPPING_STATE_CLOSED";
})(SHIPPING_STATE || (exports.SHIPPING_STATE = SHIPPING_STATE = {}));
// Retrieve enum metadata with: proto3.getEnumType(SHIPPING_STATE)
protobuf_1.proto3.util.setEnumType(SHIPPING_STATE, "scanswift.SHIPPING_STATE", [
    { no: 0, name: "SHIPPING_STATE_ANY_UNSPECIFIED" },
    { no: 1, name: "SHIPPING_STATE_OPEN" },
    { no: 2, name: "SHIPPING_STATE_CLOSED" },
]);
/**
 *
 * Stores the possible values for encoding type
 *
 * @generated from enum scanswift.PRINT_ENCODING_TYPE_FOR_SHIPPING
 */
var PRINT_ENCODING_TYPE_FOR_SHIPPING;
(function (PRINT_ENCODING_TYPE_FOR_SHIPPING) {
    /**
     * Generate the code as HRI
     *
     * @generated from enum value: PRINT_ENCODING_TYPE_FOR_SHIPPING_HRI_UNSPECIFIED = 0;
     */
    PRINT_ENCODING_TYPE_FOR_SHIPPING[PRINT_ENCODING_TYPE_FOR_SHIPPING["PRINT_ENCODING_TYPE_FOR_SHIPPING_HRI_UNSPECIFIED"] = 0] = "PRINT_ENCODING_TYPE_FOR_SHIPPING_HRI_UNSPECIFIED";
    /**
     * Generate the code as URI
     *
     * @generated from enum value: PRINT_ENCODING_TYPE_FOR_SHIPPING_URI = 1;
     */
    PRINT_ENCODING_TYPE_FOR_SHIPPING[PRINT_ENCODING_TYPE_FOR_SHIPPING["PRINT_ENCODING_TYPE_FOR_SHIPPING_URI"] = 1] = "PRINT_ENCODING_TYPE_FOR_SHIPPING_URI";
    /**
     * Generate the code in all the available forms
     *
     * @generated from enum value: PRINT_ENCODING_TYPE_FOR_SHIPPING_ALL = 2;
     */
    PRINT_ENCODING_TYPE_FOR_SHIPPING[PRINT_ENCODING_TYPE_FOR_SHIPPING["PRINT_ENCODING_TYPE_FOR_SHIPPING_ALL"] = 2] = "PRINT_ENCODING_TYPE_FOR_SHIPPING_ALL";
})(PRINT_ENCODING_TYPE_FOR_SHIPPING || (exports.PRINT_ENCODING_TYPE_FOR_SHIPPING = PRINT_ENCODING_TYPE_FOR_SHIPPING = {}));
// Retrieve enum metadata with: proto3.getEnumType(PRINT_ENCODING_TYPE_FOR_SHIPPING)
protobuf_1.proto3.util.setEnumType(PRINT_ENCODING_TYPE_FOR_SHIPPING, "scanswift.PRINT_ENCODING_TYPE_FOR_SHIPPING", [
    { no: 0, name: "PRINT_ENCODING_TYPE_FOR_SHIPPING_HRI_UNSPECIFIED" },
    { no: 1, name: "PRINT_ENCODING_TYPE_FOR_SHIPPING_URI" },
    { no: 2, name: "PRINT_ENCODING_TYPE_FOR_SHIPPING_ALL" },
]);
/**
 *
 * Describes the available sort keys for retrieving shippings
 *
 * @generated from enum scanswift.SHIPPING_SORT_KEY
 */
var SHIPPING_SORT_KEY;
(function (SHIPPING_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: SHIPPING_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    SHIPPING_SORT_KEY[SHIPPING_SORT_KEY["SHIPPING_SORT_KEY_ID_UNSPECIFIED"] = 0] = "SHIPPING_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: SHIPPING_SORT_KEY_CREATED_AT = 1;
     */
    SHIPPING_SORT_KEY[SHIPPING_SORT_KEY["SHIPPING_SORT_KEY_CREATED_AT"] = 1] = "SHIPPING_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: SHIPPING_SORT_KEY_MODIFIED_AT = 2;
     */
    SHIPPING_SORT_KEY[SHIPPING_SORT_KEY["SHIPPING_SORT_KEY_MODIFIED_AT"] = 2] = "SHIPPING_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by name
     *
     * @generated from enum value: SHIPPING_SORT_KEY_NAME = 10;
     */
    SHIPPING_SORT_KEY[SHIPPING_SORT_KEY["SHIPPING_SORT_KEY_NAME"] = 10] = "SHIPPING_SORT_KEY_NAME";
    /**
     * Fetch ordered results by code
     *
     * @generated from enum value: SHIPPING_SORT_KEY_CODE = 11;
     */
    SHIPPING_SORT_KEY[SHIPPING_SORT_KEY["SHIPPING_SORT_KEY_CODE"] = 11] = "SHIPPING_SORT_KEY_CODE";
})(SHIPPING_SORT_KEY || (exports.SHIPPING_SORT_KEY = SHIPPING_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(SHIPPING_SORT_KEY)
protobuf_1.proto3.util.setEnumType(SHIPPING_SORT_KEY, "scanswift.SHIPPING_SORT_KEY", [
    { no: 0, name: "SHIPPING_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "SHIPPING_SORT_KEY_CREATED_AT" },
    { no: 2, name: "SHIPPING_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "SHIPPING_SORT_KEY_NAME" },
    { no: 11, name: "SHIPPING_SORT_KEY_CODE" },
]);
/**
 *
 * Describes the necessary data structure during creation of a shipping
 *
 * @generated from message scanswift.ShippingsServiceCreateRequest
 */
class ShippingsServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * UUID of the entity
         *
         * @generated from field: string entity_uuid = 2;
         */
        this.entityUuid = "";
        /**
         * UUID of the customer
         *
         * @generated from field: string customer_uuid = 7;
         */
        this.customerUuid = "";
        /**
         * UUID of the location
         *
         * @generated from field: string location_uuid = 8;
         */
        this.locationUuid = "";
        /**
         * UUID of the zone
         *
         * @generated from field: string zone_uuid = 9;
         */
        this.zoneUuid = "";
        /**
         * The name of the shipping
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * Description of the shipping
         *
         * @generated from field: string description = 12;
         */
        this.description = "";
        /**
         * The maximum number of items that can be added to a shipping record, with 0 denoting no limit
         *
         * @generated from field: int64 max_count = 13;
         */
        this.maxCount = protobuf_1.protoInt64.zero;
        /**
         * The latitude of the location where this shipping was created
         *
         * @generated from field: double latitude = 14;
         */
        this.latitude = 0;
        /**
         * The longitude of the location where this shipping was created
         *
         * @generated from field: double longitude = 15;
         */
        this.longitude = 0;
        /**
         * The type of encoding
         *
         * @generated from field: scanswift.PRINT_ENCODING_TYPE_FOR_SHIPPING print_encoding_type = 16;
         */
        this.printEncodingType = PRINT_ENCODING_TYPE_FOR_SHIPPING.PRINT_ENCODING_TYPE_FOR_SHIPPING_HRI_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsServiceCreateRequest, a, b);
    }
}
exports.ShippingsServiceCreateRequest = ShippingsServiceCreateRequest;
ShippingsServiceCreateRequest.runtime = protobuf_1.proto3;
ShippingsServiceCreateRequest.typeName = "scanswift.ShippingsServiceCreateRequest";
ShippingsServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "customer_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "zone_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "max_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 15, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 16, name: "print_encoding_type", kind: "enum", T: protobuf_1.proto3.getEnumType(PRINT_ENCODING_TYPE_FOR_SHIPPING) },
]);
/**
 *
 * Describes the data structure of each shipping on the platform
 *
 * @generated from message scanswift.Shipping
 */
class Shipping extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * UUID of the entity
         *
         * @generated from field: string entity_uuid = 2;
         */
        this.entityUuid = "";
        /**
         * UUID of the customer
         *
         * @generated from field: string customer_uuid = 7;
         */
        this.customerUuid = "";
        /**
         * UUID of the location
         *
         * @generated from field: string location_uuid = 8;
         */
        this.locationUuid = "";
        /**
         * UUID of the zone
         *
         * @generated from field: string zone_uuid = 9;
         */
        this.zoneUuid = "";
        /**
         * The name of the shipping
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * Code of the shipping
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * Description of the shipping
         *
         * @generated from field: string description = 12;
         */
        this.description = "";
        /**
         * The maximum number of items that can be added to a shipping record, with 0 denoting no limit
         *
         * @generated from field: int64 max_count = 13;
         */
        this.maxCount = protobuf_1.protoInt64.zero;
        /**
         * The latitude of the location where this shipping was created
         *
         * @generated from field: double latitude = 14;
         */
        this.latitude = 0;
        /**
         * The longitude of the location where this shipping was created
         *
         * @generated from field: double longitude = 15;
         */
        this.longitude = 0;
        /**
         * The type of encoding
         *
         * @generated from field: scanswift.PRINT_ENCODING_TYPE_FOR_SHIPPING print_encoding_type = 16;
         */
        this.printEncodingType = PRINT_ENCODING_TYPE_FOR_SHIPPING.PRINT_ENCODING_TYPE_FOR_SHIPPING_HRI_UNSPECIFIED;
        /**
         * The state of the shipping
         *
         * @generated from field: scanswift.SHIPPING_STATE state = 20;
         */
        this.state = SHIPPING_STATE.SHIPPING_STATE_ANY_UNSPECIFIED;
        /**
         * Stores if the shipping has already been downloaded
         *
         * @generated from field: bool is_downloaded = 30;
         */
        this.isDownloaded = false;
        /**
         * Stores the number of times that this shipping has already been downloaded
         *
         * @generated from field: int64 download_count = 31;
         */
        this.downloadCount = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Shipping().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Shipping().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Shipping().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Shipping, a, b);
    }
}
exports.Shipping = Shipping;
Shipping.runtime = protobuf_1.proto3;
Shipping.typeName = "scanswift.Shipping";
Shipping.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: base_pb_js_1.Metadata },
    { no: 2, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "customer_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "zone_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "max_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 15, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 16, name: "print_encoding_type", kind: "enum", T: protobuf_1.proto3.getEnumType(PRINT_ENCODING_TYPE_FOR_SHIPPING) },
    { no: 20, name: "state", kind: "enum", T: protobuf_1.proto3.getEnumType(SHIPPING_STATE) },
    { no: 30, name: "is_downloaded", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 31, name: "download_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
/**
 *
 * Describes the data structure of each shipping with its relevant metadata
 *
 * @generated from message scanswift.ShippingMetadata
 */
class ShippingMetadata extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the string that will be used to generate the QR code
         *
         * @generated from field: string qr_string = 3;
         */
        this.qrString = "";
        /**
         * Stores the number of packagings that have already been added to the shipping
         *
         * @generated from field: int64 added_packagings_count = 10;
         */
        this.addedPackagingsCount = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingMetadata().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingMetadata().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingMetadata().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingMetadata, a, b);
    }
}
exports.ShippingMetadata = ShippingMetadata;
ShippingMetadata.runtime = protobuf_1.proto3;
ShippingMetadata.typeName = "scanswift.ShippingMetadata";
ShippingMetadata.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "shipping", kind: "message", T: Shipping },
    { no: 3, name: "qr_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "added_packagings_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "location", kind: "message", T: locations_pb_js_1.Location },
    { no: 40, name: "entity", kind: "message", T: entities_pb_js_1.Entity },
]);
/**
 *
 * Describes the data structure that stores a list of shippings
 *
 * @generated from message scanswift.ShippingsList
 */
class ShippingsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of shippings
         *
         * @generated from field: repeated scanswift.Shipping list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsList, a, b);
    }
}
exports.ShippingsList = ShippingsList;
ShippingsList.runtime = protobuf_1.proto3;
ShippingsList.typeName = "scanswift.ShippingsList";
ShippingsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Shipping, repeated: true },
]);
/**
 *
 * Describes the necessary data structure during addition of multiple packagings to a shipping
 *
 * @generated from message scanswift.ShippingsServiceAddPackagingsRequest
 */
class ShippingsServiceAddPackagingsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * UUID of the shipping
         *
         * @generated from field: string shipping_uuid = 10;
         */
        this.shippingUuid = "";
        /**
         * The latitude of the location where this shipping was created
         *
         * @generated from field: double latitude = 11;
         */
        this.latitude = 0;
        /**
         * The longitude of the location where this shipping was created
         *
         * @generated from field: double longitude = 12;
         */
        this.longitude = 0;
        /**
         * List of packagings
         *
         * @generated from field: repeated scanswift.ShippingsServiceAddPackagingRequest list = 13;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsServiceAddPackagingsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsServiceAddPackagingsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsServiceAddPackagingsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsServiceAddPackagingsRequest, a, b);
    }
}
exports.ShippingsServiceAddPackagingsRequest = ShippingsServiceAddPackagingsRequest;
ShippingsServiceAddPackagingsRequest.runtime = protobuf_1.proto3;
ShippingsServiceAddPackagingsRequest.typeName = "scanswift.ShippingsServiceAddPackagingsRequest";
ShippingsServiceAddPackagingsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "shipping_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 12, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 13, name: "list", kind: "message", T: ShippingsServiceAddPackagingRequest, repeated: true },
]);
/**
 *
 * Describes the necessary data structure during addition of a packaging to a shipping
 *
 * @generated from message scanswift.ShippingsServiceAddPackagingRequest
 */
class ShippingsServiceAddPackagingRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * UUID of the packaging
         *
         * @generated from field: string packaging_uuid = 11;
         */
        this.packagingUuid = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsServiceAddPackagingRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsServiceAddPackagingRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsServiceAddPackagingRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsServiceAddPackagingRequest, a, b);
    }
}
exports.ShippingsServiceAddPackagingRequest = ShippingsServiceAddPackagingRequest;
ShippingsServiceAddPackagingRequest.runtime = protobuf_1.proto3;
ShippingsServiceAddPackagingRequest.typeName = "scanswift.ShippingsServiceAddPackagingRequest";
ShippingsServiceAddPackagingRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 11, name: "packaging_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the data structure of each shipping packaging
 *
 * @generated from message scanswift.ShippingPackaging
 */
class ShippingPackaging extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * UUID of the entity
         *
         * @generated from field: string entity_uuid = 2;
         */
        this.entityUuid = "";
        /**
         * UUID of the customer
         *
         * @generated from field: string customer_uuid = 7;
         */
        this.customerUuid = "";
        /**
         * UUID of the location
         *
         * @generated from field: string location_uuid = 8;
         */
        this.locationUuid = "";
        /**
         * UUID of the zone
         *
         * @generated from field: string zone_uuid = 9;
         */
        this.zoneUuid = "";
        /**
         * UUID of the shipping
         *
         * @generated from field: string shipping_uuid = 10;
         */
        this.shippingUuid = "";
        /**
         * UUID of the packaging
         *
         * @generated from field: string packaging_uuid = 11;
         */
        this.packagingUuid = "";
        /**
         * The latitude of the location where this shipping was created
         *
         * @generated from field: double latitude = 12;
         */
        this.latitude = 0;
        /**
         * The longitude of the location where this shipping was created
         *
         * @generated from field: double longitude = 13;
         */
        this.longitude = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingPackaging().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingPackaging().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingPackaging().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingPackaging, a, b);
    }
}
exports.ShippingPackaging = ShippingPackaging;
ShippingPackaging.runtime = protobuf_1.proto3;
ShippingPackaging.typeName = "scanswift.ShippingPackaging";
ShippingPackaging.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: base_pb_js_1.Metadata },
    { no: 2, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "customer_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "zone_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "shipping_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "packaging_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 13, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
/**
 *
 * Describes the data structure that stores a list of shipping packagings
 *
 * @generated from message scanswift.ShippingsPackagingsList
 */
class ShippingsPackagingsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of packagings that are associated with the shipping
         *
         * @generated from field: repeated scanswift.ShippingPackaging list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsPackagingsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsPackagingsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsPackagingsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsPackagingsList, a, b);
    }
}
exports.ShippingsPackagingsList = ShippingsPackagingsList;
ShippingsPackagingsList.runtime = protobuf_1.proto3;
ShippingsPackagingsList.typeName = "scanswift.ShippingsPackagingsList";
ShippingsPackagingsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ShippingPackaging, repeated: true },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message scanswift.ShippingsServicePaginationReq
 */
class ShippingsServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: scanswift.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: scanswift.SHIPPING_SORT_KEY sort_key = 5;
         */
        this.sortKey = SHIPPING_SORT_KEY.SHIPPING_SORT_KEY_ID_UNSPECIFIED;
        /**
         * UUID of the entity
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsServicePaginationReq, a, b);
    }
}
exports.ShippingsServicePaginationReq = ShippingsServicePaginationReq;
ShippingsServicePaginationReq.runtime = protobuf_1.proto3;
ShippingsServicePaginationReq.typeName = "scanswift.ShippingsServicePaginationReq";
ShippingsServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(SHIPPING_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message scanswift.ShippingPaginationResp
 */
class ShippingPaginationResp extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: int64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: int64 total = 2;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated scanswift.Shipping payload = 3;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingPaginationResp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingPaginationResp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingPaginationResp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingPaginationResp, a, b);
    }
}
exports.ShippingPaginationResp = ShippingPaginationResp;
ShippingPaginationResp.runtime = protobuf_1.proto3;
ShippingPaginationResp.typeName = "scanswift.ShippingPaginationResp";
ShippingPaginationResp.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "payload", kind: "message", T: Shipping, repeated: true },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message scanswift.ShippingsServiceFilterReq
 */
class ShippingsServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: scanswift.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: scanswift.SHIPPING_SORT_KEY sort_key = 5;
         */
        this.sortKey = SHIPPING_SORT_KEY.SHIPPING_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: int64 creation_timestamp_start = 6;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: int64 creation_timestamp_end = 7;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * UUID of the entity
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * UUID of the location
         *
         * @generated from field: string location_uuid = 9;
         */
        this.locationUuid = "";
        /**
         * UUID of the zone
         *
         * @generated from field: string zone_uuid = 10;
         */
        this.zoneUuid = "";
        /**
         * UUID of the customer
         *
         * @generated from field: string customer_uuid = 11;
         */
        this.customerUuid = "";
        /**
         * The name of the shipping
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * Code of the shipping
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The state of the shipping
         *
         * @generated from field: scanswift.SHIPPING_STATE state = 30;
         */
        this.state = SHIPPING_STATE.SHIPPING_STATE_ANY_UNSPECIFIED;
        /**
         * The downloaded status
         *
         * @generated from field: scanswift.DOWNLOADED_STATUS is_downloaded = 40;
         */
        this.isDownloaded = base_pb_js_1.DOWNLOADED_STATUS.DOWNLOADED_STATUS_ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsServiceFilterReq, a, b);
    }
}
exports.ShippingsServiceFilterReq = ShippingsServiceFilterReq;
ShippingsServiceFilterReq.runtime = protobuf_1.proto3;
ShippingsServiceFilterReq.typeName = "scanswift.ShippingsServiceFilterReq";
ShippingsServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(SHIPPING_SORT_KEY) },
    { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "zone_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "customer_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "state", kind: "enum", T: protobuf_1.proto3.getEnumType(SHIPPING_STATE) },
    { no: 40, name: "is_downloaded", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.DOWNLOADED_STATUS) },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message scanswift.ShippingsServiceSearchAllReq
 */
class ShippingsServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: scanswift.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: scanswift.SHIPPING_SORT_KEY sort_key = 5;
         */
        this.sortKey = SHIPPING_SORT_KEY.SHIPPING_SORT_KEY_ID_UNSPECIFIED;
        /**
         * UUID of the entity
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * UUID of the location
         *
         * @generated from field: string location_uuid = 7;
         */
        this.locationUuid = "";
        /**
         * UUID of the zone
         *
         * @generated from field: string zone_uuid = 8;
         */
        this.zoneUuid = "";
        /**
         * UUID of the customer
         *
         * @generated from field: string customer_uuid = 9;
         */
        this.customerUuid = "";
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        /**
         * The downloaded status
         *
         * @generated from field: scanswift.DOWNLOADED_STATUS is_downloaded = 40;
         */
        this.isDownloaded = base_pb_js_1.DOWNLOADED_STATUS.DOWNLOADED_STATUS_ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShippingsServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShippingsServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShippingsServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ShippingsServiceSearchAllReq, a, b);
    }
}
exports.ShippingsServiceSearchAllReq = ShippingsServiceSearchAllReq;
ShippingsServiceSearchAllReq.runtime = protobuf_1.proto3;
ShippingsServiceSearchAllReq.typeName = "scanswift.ShippingsServiceSearchAllReq";
ShippingsServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(SHIPPING_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "zone_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "customer_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "is_downloaded", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.DOWNLOADED_STATUS) },
]);
