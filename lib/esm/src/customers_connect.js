"use strict";
// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file customers.proto (package tcube, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomersService = void 0;
const customers_pb_js_1 = require("./customers_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the methods applicable on each customer
 *
 * @generated from service tcube.CustomersService
 */
exports.CustomersService = {
    typeName: "tcube.CustomersService",
    methods: {
        /**
         * Create a customer
         *
         * @generated from rpc tcube.CustomersService.Create
         */
        create: {
            name: "Create",
            I: customers_pb_js_1.CustomersServiceCreateRequest,
            O: customers_pb_js_1.Customer,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Update a customer
         *
         * @generated from rpc tcube.CustomersService.Update
         */
        update: {
            name: "Update",
            I: customers_pb_js_1.CustomersServiceUpdateRequest,
            O: customers_pb_js_1.Customer,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Archive the customer
         *
         * @generated from rpc tcube.CustomersService.Archive
         */
        archive: {
            name: "Archive",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Restore the customer
         *
         * @generated from rpc tcube.CustomersService.Restore
         */
        restore: {
            name: "Restore",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by UUID
         *
         * @generated from rpc tcube.CustomersService.ViewByUUID
         */
        viewByUUID: {
            name: "ViewByUUID",
            I: base_pb_js_1.Identifier,
            O: customers_pb_js_1.Customer,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all customers
         *
         * @generated from rpc tcube.CustomersService.ViewAll
         */
        viewAll: {
            name: "ViewAll",
            I: base_pb_js_1.ActiveInEntityRequest,
            O: customers_pb_js_1.CustomersList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View customers with pagination
         *
         * @generated from rpc tcube.CustomersService.ViewWithPagination
         */
        viewWithPagination: {
            name: "ViewWithPagination",
            I: customers_pb_js_1.CustomersServicePaginationReq,
            O: customers_pb_js_1.CustomerPaginationResp,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given search key
         *
         * @generated from rpc tcube.CustomersService.SearchAll
         */
        searchAll: {
            name: "SearchAll",
            I: customers_pb_js_1.CustomersServiceSearchAllReq,
            O: customers_pb_js_1.CustomersList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given filter criteria
         *
         * @generated from rpc tcube.CustomersService.Filter
         */
        filter: {
            name: "Filter",
            I: customers_pb_js_1.CustomersServiceFilterReq,
            O: customers_pb_js_1.CustomersList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Count
         *
         * @generated from rpc tcube.CustomersService.Count
         */
        count: {
            name: "Count",
            I: base_pb_js_1.CountInEntityRequest,
            O: base_pb_js_1.CountResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
