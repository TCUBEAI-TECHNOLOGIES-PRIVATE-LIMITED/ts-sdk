"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file invoices.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoicesServiceSearchAllReq = exports.InvoicesServiceFilterReq = exports.InvoicePaginationResp = exports.InvoicesServicePaginationReq = exports.InvoicesList = exports.Invoice = exports.InvoicesServicePaymentRequest = exports.InvoicesServiceUpdateRequest = exports.InvoicesServiceCreateRequest = exports.INVOICE_SORT_KEY = exports.INVOICE_STATUS = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Stores the possible values for an invoice
 *
 * @generated from enum scanswift.INVOICE_STATUS
 */
var INVOICE_STATUS;
(function (INVOICE_STATUS) {
    /**
     * Used only for filter operations
     *
     * @generated from enum value: INVOICE_STATUS_ANY_UNSPECIFIED = 0;
     */
    INVOICE_STATUS[INVOICE_STATUS["INVOICE_STATUS_ANY_UNSPECIFIED"] = 0] = "INVOICE_STATUS_ANY_UNSPECIFIED";
    /**
     * Denotes that the invoice is open (and unpaid)
     *
     * @generated from enum value: INVOICE_STATUS_OPEN = 1;
     */
    INVOICE_STATUS[INVOICE_STATUS["INVOICE_STATUS_OPEN"] = 1] = "INVOICE_STATUS_OPEN";
    /**
     * Denotes that the invoice has been paid
     *
     * @generated from enum value: INVOICE_STATUS_PAID = 2;
     */
    INVOICE_STATUS[INVOICE_STATUS["INVOICE_STATUS_PAID"] = 2] = "INVOICE_STATUS_PAID";
    /**
     * Denotes that the invoice has been cancelled
     *
     * @generated from enum value: INVOICE_STATUS_CANCELLED = 3;
     */
    INVOICE_STATUS[INVOICE_STATUS["INVOICE_STATUS_CANCELLED"] = 3] = "INVOICE_STATUS_CANCELLED";
})(INVOICE_STATUS || (exports.INVOICE_STATUS = INVOICE_STATUS = {}));
// Retrieve enum metadata with: proto3.getEnumType(INVOICE_STATUS)
protobuf_1.proto3.util.setEnumType(INVOICE_STATUS, "scanswift.INVOICE_STATUS", [
    { no: 0, name: "INVOICE_STATUS_ANY_UNSPECIFIED" },
    { no: 1, name: "INVOICE_STATUS_OPEN" },
    { no: 2, name: "INVOICE_STATUS_PAID" },
    { no: 3, name: "INVOICE_STATUS_CANCELLED" },
]);
/**
 *
 * Describes the available sort keys for retrieving invoices
 *
 * @generated from enum scanswift.INVOICE_SORT_KEY
 */
var INVOICE_SORT_KEY;
(function (INVOICE_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: INVOICE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    INVOICE_SORT_KEY[INVOICE_SORT_KEY["INVOICE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "INVOICE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: INVOICE_SORT_KEY_CREATED_AT = 1;
     */
    INVOICE_SORT_KEY[INVOICE_SORT_KEY["INVOICE_SORT_KEY_CREATED_AT"] = 1] = "INVOICE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: INVOICE_SORT_KEY_MODIFIED_AT = 2;
     */
    INVOICE_SORT_KEY[INVOICE_SORT_KEY["INVOICE_SORT_KEY_MODIFIED_AT"] = 2] = "INVOICE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by name
     *
     * @generated from enum value: INVOICE_SORT_KEY_NAME = 10;
     */
    INVOICE_SORT_KEY[INVOICE_SORT_KEY["INVOICE_SORT_KEY_NAME"] = 10] = "INVOICE_SORT_KEY_NAME";
    /**
     * Fetch ordered results by code
     *
     * @generated from enum value: INVOICE_SORT_KEY_CODE = 11;
     */
    INVOICE_SORT_KEY[INVOICE_SORT_KEY["INVOICE_SORT_KEY_CODE"] = 11] = "INVOICE_SORT_KEY_CODE";
    /**
     * Fetch ordered results by amount
     *
     * @generated from enum value: INVOICE_SORT_KEY_AMOUNT = 12;
     */
    INVOICE_SORT_KEY[INVOICE_SORT_KEY["INVOICE_SORT_KEY_AMOUNT"] = 12] = "INVOICE_SORT_KEY_AMOUNT";
})(INVOICE_SORT_KEY || (exports.INVOICE_SORT_KEY = INVOICE_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(INVOICE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(INVOICE_SORT_KEY, "scanswift.INVOICE_SORT_KEY", [
    { no: 0, name: "INVOICE_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "INVOICE_SORT_KEY_CREATED_AT" },
    { no: 2, name: "INVOICE_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "INVOICE_SORT_KEY_NAME" },
    { no: 11, name: "INVOICE_SORT_KEY_CODE" },
    { no: 12, name: "INVOICE_SORT_KEY_AMOUNT" },
]);
/**
 *
 * Describes the necessary data structure during creation of a invoice
 *
 * @generated from message scanswift.InvoicesServiceCreateRequest
 */
class InvoicesServiceCreateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * UUID of the entity
     *
     * @generated from field: string entity_uuid = 2;
     */
    entityUuid = "";
    /**
     * The name of the invoice
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * UUID of the currency
     *
     * @generated from field: string currency_uuid = 12;
     */
    currencyUuid = "";
    /**
     * The invoice amount (in cents)
     *
     * @generated from field: int64 amount = 13;
     */
    amount = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesServiceCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesServiceCreateRequest, a, b);
    }
}
exports.InvoicesServiceCreateRequest = InvoicesServiceCreateRequest;
/**
 *
 * Describes the data structure to perform the update (draft/revision) operation on a invoice
 *
 * @generated from message scanswift.InvoicesServiceUpdateRequest
 */
class InvoicesServiceUpdateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The UUID of the resource that needs to be updated
     *
     * @generated from field: string uuid = 2;
     */
    uuid = "";
    /**
     * The name of the invoice
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * UUID of the currency
     *
     * @generated from field: string currency_uuid = 12;
     */
    currencyUuid = "";
    /**
     * The invoice amount (in cents)
     *
     * @generated from field: int64 amount = 13;
     */
    amount = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesServiceUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesServiceUpdateRequest, a, b);
    }
}
exports.InvoicesServiceUpdateRequest = InvoicesServiceUpdateRequest;
/**
 *
 * Describes the data structure to mark the transaction as succeeded or failed
 *
 * @generated from message scanswift.InvoicesServicePaymentRequest
 */
class InvoicesServicePaymentRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The UUID of the resource that needs to be updated
     *
     * @generated from field: string uuid = 2;
     */
    uuid = "";
    /**
     * Stores the tracking ID generated by the payment gateway
     *
     * @generated from field: string payment_gateway_tracking_id = 20;
     */
    paymentGatewayTrackingId = "";
    /**
     * Stores the bank reference number generated by the payment gateway
     *
     * @generated from field: string payment_gateway_bank_ref_no = 21;
     */
    paymentGatewayBankRefNo = "";
    /**
     * Stores the response from the payment gateway in its totality, as a JSON blob
     *
     * @generated from field: bytes payment_gateway_consolidated_resp = 30;
     */
    paymentGatewayConsolidatedResp = new Uint8Array(0);
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesServicePaymentRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 20, name: "payment_gateway_tracking_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "payment_gateway_bank_ref_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 30, name: "payment_gateway_consolidated_resp", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesServicePaymentRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesServicePaymentRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesServicePaymentRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesServicePaymentRequest, a, b);
    }
}
exports.InvoicesServicePaymentRequest = InvoicesServicePaymentRequest;
/**
 *
 * Describes the data structure of each invoice on the platform
 *
 * @generated from message scanswift.Invoice
 */
class Invoice extends protobuf_1.Message {
    /**
     * Stores the metadata of this resource
     *
     * @generated from field: scanswift.Metadata metadata = 1;
     */
    metadata;
    /**
     * UUID of the entity
     *
     * @generated from field: string entity_uuid = 2;
     */
    entityUuid = "";
    /**
     * The name of the invoice
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Code of the invoice
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * UUID of the currency
     *
     * @generated from field: string currency_uuid = 12;
     */
    currencyUuid = "";
    /**
     * The invoice amount (in cents)
     *
     * @generated from field: int64 amount = 13;
     */
    amount = protobuf_1.protoInt64.zero;
    /**
     * The status of the invoice
     *
     * @generated from field: scanswift.INVOICE_STATUS status = 14;
     */
    status = INVOICE_STATUS.INVOICE_STATUS_ANY_UNSPECIFIED;
    /**
     * Stores the tracking ID generated by the payment gateway
     *
     * @generated from field: string payment_gateway_tracking_id = 20;
     */
    paymentGatewayTrackingId = "";
    /**
     * Stores the bank reference number generated by the payment gateway
     *
     * @generated from field: string payment_gateway_bank_ref_no = 21;
     */
    paymentGatewayBankRefNo = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.Invoice";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "metadata", kind: "message", T: base_pb_js_1.Metadata },
        { no: 2, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 14, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(INVOICE_STATUS) },
        { no: 20, name: "payment_gateway_tracking_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "payment_gateway_bank_ref_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Invoice().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Invoice().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Invoice().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Invoice, a, b);
    }
}
exports.Invoice = Invoice;
/**
 *
 * Describes the data structure that stores a list of invoices
 *
 * @generated from message scanswift.InvoicesList
 */
class InvoicesList extends protobuf_1.Message {
    /**
     * List of invoices
     *
     * @generated from field: repeated scanswift.Invoice list = 1;
     */
    list = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "list", kind: "message", T: Invoice, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesList, a, b);
    }
}
exports.InvoicesList = InvoicesList;
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message scanswift.InvoicesServicePaginationReq
 */
class InvoicesServicePaginationReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.INVOICE_SORT_KEY sort_key = 5;
     */
    sortKey = INVOICE_SORT_KEY.INVOICE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * UUID of the entity
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesServicePaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(INVOICE_SORT_KEY) },
        { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesServicePaginationReq, a, b);
    }
}
exports.InvoicesServicePaginationReq = InvoicesServicePaginationReq;
/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message scanswift.InvoicePaginationResp
 */
class InvoicePaginationResp extends protobuf_1.Message {
    /**
     * The number of records in this payload
     *
     * @generated from field: int64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: int64 total = 2;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated scanswift.Invoice payload = 3;
     */
    payload = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicePaginationResp";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 2, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "payload", kind: "message", T: Invoice, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicePaginationResp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicePaginationResp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicePaginationResp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicePaginationResp, a, b);
    }
}
exports.InvoicePaginationResp = InvoicePaginationResp;
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message scanswift.InvoicesServiceFilterReq
 */
class InvoicesServiceFilterReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.INVOICE_SORT_KEY sort_key = 5;
     */
    sortKey = INVOICE_SORT_KEY.INVOICE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The minimum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_start = 6;
     */
    creationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_end = 7;
     */
    creationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * UUID of the entity
     *
     * @generated from field: string entity_uuid = 8;
     */
    entityUuid = "";
    /**
     * The name of the invoice
     *
     * @generated from field: string name = 20;
     */
    name = "";
    /**
     * Code of the invoice
     *
     * @generated from field: string code = 21;
     */
    code = "";
    /**
     * UUID of the currency
     *
     * @generated from field: string currency_uuid = 22;
     */
    currencyUuid = "";
    /**
     * The status of the invoice
     *
     * @generated from field: scanswift.INVOICE_STATUS status = 24;
     */
    status = INVOICE_STATUS.INVOICE_STATUS_ANY_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesServiceFilterReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(INVOICE_SORT_KEY) },
        { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 22, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 24, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(INVOICE_STATUS) },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesServiceFilterReq, a, b);
    }
}
exports.InvoicesServiceFilterReq = InvoicesServiceFilterReq;
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message scanswift.InvoicesServiceSearchAllReq
 */
class InvoicesServiceSearchAllReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.INVOICE_SORT_KEY sort_key = 5;
     */
    sortKey = INVOICE_SORT_KEY.INVOICE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * UUID of the entity
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    /**
     * Describes the key with which the search operation needs to be performed
     *
     * @generated from field: string search_key = 11;
     */
    searchKey = "";
    /**
     * The status of the invoice
     *
     * @generated from field: scanswift.INVOICE_STATUS status = 20;
     */
    status = INVOICE_STATUS.INVOICE_STATUS_ANY_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.InvoicesServiceSearchAllReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(INVOICE_SORT_KEY) },
        { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 20, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(INVOICE_STATUS) },
    ]);
    static fromBinary(bytes, options) {
        return new InvoicesServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InvoicesServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InvoicesServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(InvoicesServiceSearchAllReq, a, b);
    }
}
exports.InvoicesServiceSearchAllReq = InvoicesServiceSearchAllReq;
