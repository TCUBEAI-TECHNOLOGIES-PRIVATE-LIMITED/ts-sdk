"use strict";
// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file packagings.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackagingsService = void 0;
const packagings_pb_js_1 = require("./packagings_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the methods applicable on each packaging
 *
 * @generated from service scanswift.PackagingsService
 */
exports.PackagingsService = {
    typeName: "scanswift.PackagingsService",
    methods: {
        /**
         * Create a packaging
         *
         * // Update a packaging
         * rpc Update (PackagingsServiceUpdateRequest) returns (Packaging);
         *
         * @generated from rpc scanswift.PackagingsService.Create
         */
        create: {
            name: "Create",
            I: packagings_pb_js_1.PackagingsServiceCreateRequest,
            O: packagings_pb_js_1.Packaging,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Close the packaging
         *
         * @generated from rpc scanswift.PackagingsService.Close
         */
        close: {
            name: "Close",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Archive the packaging
         *
         * @generated from rpc scanswift.PackagingsService.Archive
         */
        archive: {
            name: "Archive",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Restore the packaging
         *
         * @generated from rpc scanswift.PackagingsService.Restore
         */
        restore: {
            name: "Restore",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Recall the packaging
         *
         * @generated from rpc scanswift.PackagingsService.Recall
         */
        recall: {
            name: "Recall",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by UUID
         *
         * @generated from rpc scanswift.PackagingsService.ViewByUUID
         */
        viewByUUID: {
            name: "ViewByUUID",
            I: base_pb_js_1.Identifier,
            O: packagings_pb_js_1.Packaging,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by Code
         *
         * @generated from rpc scanswift.PackagingsService.ViewByCode
         */
        viewByCode: {
            name: "ViewByCode",
            I: base_pb_js_1.SearchKeyRequest,
            O: packagings_pb_js_1.Packaging,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View the metadata using the packaging code
         *
         * @generated from rpc scanswift.PackagingsService.ViewMetadataByCode
         */
        viewMetadataByCode: {
            name: "ViewMetadataByCode",
            I: base_pb_js_1.SearchKeyRequest,
            O: packagings_pb_js_1.PackagingMetadata,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all packagings
         *
         * @generated from rpc scanswift.PackagingsService.ViewAll
         */
        viewAll: {
            name: "ViewAll",
            I: base_pb_js_1.ActiveInEntityRequest,
            O: packagings_pb_js_1.PackagingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View packagings with pagination
         *
         * @generated from rpc scanswift.PackagingsService.ViewWithPagination
         */
        viewWithPagination: {
            name: "ViewWithPagination",
            I: packagings_pb_js_1.PackagingsServicePaginationReq,
            O: packagings_pb_js_1.PackagingPaginationResp,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View as QR code
         *
         * @generated from rpc scanswift.PackagingsService.ViewAsQR
         */
        viewAsQR: {
            name: "ViewAsQR",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.ImageResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View as DataMatrix
         *
         * @generated from rpc scanswift.PackagingsService.ViewAsDataMatrix
         */
        viewAsDataMatrix: {
            name: "ViewAsDataMatrix",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.ImageResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View as Image on the basis of the product's configuration
         *
         * @generated from rpc scanswift.PackagingsService.ViewAsImage
         */
        viewAsImage: {
            name: "ViewAsImage",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.ImageResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View the packaging's URI
         *
         * @generated from rpc scanswift.PackagingsService.ViewAsURI
         */
        viewAsURI: {
            name: "ViewAsURI",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.URLResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View the string that can be used to render the QR code on POS machines
         *
         * @generated from rpc scanswift.PackagingsService.ViewPrintableString
         */
        viewPrintableString: {
            name: "ViewPrintableString",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.StringResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Download the packaging as a PDF
         *
         * @generated from rpc scanswift.PackagingsService.DownloadAsPDF
         */
        downloadAsPDF: {
            name: "DownloadAsPDF",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.FileResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Download the packaging as an image
         *
         * @generated from rpc scanswift.PackagingsService.DownloadAsImage
         */
        downloadAsImage: {
            name: "DownloadAsImage",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.FileResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given search key
         *
         * @generated from rpc scanswift.PackagingsService.SearchAll
         */
        searchAll: {
            name: "SearchAll",
            I: packagings_pb_js_1.PackagingsServiceSearchAllReq,
            O: packagings_pb_js_1.PackagingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given filter criteria
         *
         * @generated from rpc scanswift.PackagingsService.Filter
         */
        filter: {
            name: "Filter",
            I: packagings_pb_js_1.PackagingsServiceFilterReq,
            O: packagings_pb_js_1.PackagingsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Count
         *
         * @generated from rpc scanswift.PackagingsService.Count
         */
        count: {
            name: "Count",
            I: base_pb_js_1.CountInEntityRequest,
            O: base_pb_js_1.CountResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Add list of serials to a packaging
         *
         * @generated from rpc scanswift.PackagingsService.AddSerials
         */
        addSerials: {
            name: "AddSerials",
            I: packagings_pb_js_1.PackagingsServiceAddSerialsRequest,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Remove serial (represented by the UUID of the associated packaging serial) from packaging and return the removed identifier
         *
         * @generated from rpc scanswift.PackagingsService.RemoveSerial
         */
        removeSerial: {
            name: "RemoveSerial",
            I: base_pb_js_1.IdentifierWithUserComment,
            O: base_pb_js_1.Identifier,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all serials associated with the packaging represented by the Identifier
         *
         * @generated from rpc scanswift.PackagingsService.ViewSerials
         */
        viewSerials: {
            name: "ViewSerials",
            I: base_pb_js_1.Identifier,
            O: packagings_pb_js_1.PackagingsSerialsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Count all serials within a packaging
         *
         * @generated from rpc scanswift.PackagingsService.CountSerials
         */
        countSerials: {
            name: "CountSerials",
            I: base_pb_js_1.Identifier,
            O: base_pb_js_1.CountResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
