"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file roles.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.RolesServicePaginationReq = exports.RolesServiceUpdateRequest = exports.RolesServiceCreateRequest = exports.RolesServiceAccessCreateAndUpdateRequest = exports.RolePaginationResp = exports.RolesList = exports.Role = exports.RoleAccess = exports.ROLE_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the available sort keys for retrieving roles
 *
 * @generated from enum scanswift.ROLE_SORT_KEY
 */
var ROLE_SORT_KEY;
(function (ROLE_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: ROLE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "ROLE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: ROLE_SORT_KEY_CREATED_AT = 1;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_CREATED_AT"] = 1] = "ROLE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: ROLE_SORT_KEY_MODIFIED_AT = 2;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_MODIFIED_AT"] = 2] = "ROLE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by name
     *
     * @generated from enum value: ROLE_SORT_KEY_NAME = 10;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_NAME"] = 10] = "ROLE_SORT_KEY_NAME";
    /**
     * Fetch ordered results by code
     *
     * @generated from enum value: ROLE_SORT_KEY_CODE = 11;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_CODE"] = 11] = "ROLE_SORT_KEY_CODE";
})(ROLE_SORT_KEY || (exports.ROLE_SORT_KEY = ROLE_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(ROLE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(ROLE_SORT_KEY, "scanswift.ROLE_SORT_KEY", [
    { no: 0, name: "ROLE_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "ROLE_SORT_KEY_CREATED_AT" },
    { no: 2, name: "ROLE_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "ROLE_SORT_KEY_NAME" },
    { no: 11, name: "ROLE_SORT_KEY_CODE" },
]);
/**
 *
 * Describes the data structure of each role access on the platform
 *
 * @generated from message scanswift.RoleAccess
 */
class RoleAccess extends protobuf_1.Message {
    /**
     * Stores the metadata of this resource
     *
     * @generated from field: scanswift.Metadata metadata = 1;
     */
    metadata;
    /**
     * The associated Role UUID
     *
     * @generated from field: string role_uuid = 10;
     */
    roleUuid = "";
    /**
     * The menu UID (or internal code)
     *
     * @generated from field: string menu_uid = 11;
     */
    menuUid = "";
    /**
     * Denotes if the menu is accessible
     *
     * @generated from field: bool is_accessible = 12;
     */
    isAccessible = false;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RoleAccess";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "metadata", kind: "message", T: base_pb_js_1.Metadata },
        { no: 10, name: "role_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "menu_uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "is_accessible", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);
    static fromBinary(bytes, options) {
        return new RoleAccess().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RoleAccess().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RoleAccess().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RoleAccess, a, b);
    }
}
exports.RoleAccess = RoleAccess;
/**
 *
 * Describes the data structure of each role on the platform
 *
 * @generated from message scanswift.Role
 */
class Role extends protobuf_1.Message {
    /**
     * Stores the metadata of this resource
     *
     * @generated from field: scanswift.Metadata metadata = 1;
     */
    metadata;
    /**
     * The name of the role
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Code of the role
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * Describe the role
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * List of role accesss accesses
     *
     * @generated from field: repeated scanswift.RoleAccess access_list = 13;
     */
    accessList = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.Role";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "metadata", kind: "message", T: base_pb_js_1.Metadata },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "access_list", kind: "message", T: RoleAccess, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new Role().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Role().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Role().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Role, a, b);
    }
}
exports.Role = Role;
/**
 *
 * Describes the data structure that stores a list of roles
 *
 * @generated from message scanswift.RolesList
 */
class RolesList extends protobuf_1.Message {
    /**
     * List of roles
     *
     * @generated from field: repeated scanswift.Role list = 1;
     */
    list = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RolesList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "list", kind: "message", T: Role, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new RolesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RolesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RolesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RolesList, a, b);
    }
}
exports.RolesList = RolesList;
/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message scanswift.RolePaginationResp
 */
class RolePaginationResp extends protobuf_1.Message {
    /**
     * The number of records in this payload
     *
     * @generated from field: int64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: int64 total = 2;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated scanswift.Role payload = 3;
     */
    payload = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RolePaginationResp";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 2, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "payload", kind: "message", T: Role, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new RolePaginationResp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RolePaginationResp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RolePaginationResp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RolePaginationResp, a, b);
    }
}
exports.RolePaginationResp = RolePaginationResp;
/**
 *
 * Describes the necessary data structure during creation/updation of a role access
 *
 * @generated from message scanswift.RolesServiceAccessCreateAndUpdateRequest
 */
class RolesServiceAccessCreateAndUpdateRequest extends protobuf_1.Message {
    /**
     * The menu UID (or internal code)
     *
     * @generated from field: string menu_uid = 11;
     */
    menuUid = "";
    /**
     * Denotes if the menu is accessible
     *
     * @generated from field: bool is_accessible = 12;
     */
    isAccessible = false;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RolesServiceAccessCreateAndUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 11, name: "menu_uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "is_accessible", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);
    static fromBinary(bytes, options) {
        return new RolesServiceAccessCreateAndUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RolesServiceAccessCreateAndUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RolesServiceAccessCreateAndUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RolesServiceAccessCreateAndUpdateRequest, a, b);
    }
}
exports.RolesServiceAccessCreateAndUpdateRequest = RolesServiceAccessCreateAndUpdateRequest;
/**
 *
 * Describes the necessary data structure during creation of a role
 *
 * @generated from message scanswift.RolesServiceCreateRequest
 */
class RolesServiceCreateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The name of the role
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Code of the role
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * Describe the role
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * The list of accessible menu UIDs
     *
     * @generated from field: repeated scanswift.RolesServiceAccessCreateAndUpdateRequest access_list = 13;
     */
    accessList = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RolesServiceCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "access_list", kind: "message", T: RolesServiceAccessCreateAndUpdateRequest, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new RolesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RolesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RolesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RolesServiceCreateRequest, a, b);
    }
}
exports.RolesServiceCreateRequest = RolesServiceCreateRequest;
/**
 *
 * Describes the data structure to perform the update (draft/revision) operation on a role
 *
 * @generated from message scanswift.RolesServiceUpdateRequest
 */
class RolesServiceUpdateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The UUID of the resource that needs to be updated
     *
     * @generated from field: string uuid = 2;
     */
    uuid = "";
    /**
     * The name of the role
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Code of the role
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * Describe the role
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * The list of accessible menu UIDs
     *
     * @generated from field: repeated scanswift.RolesServiceAccessCreateAndUpdateRequest access_list = 13;
     */
    accessList = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RolesServiceUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "access_list", kind: "message", T: RolesServiceAccessCreateAndUpdateRequest, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new RolesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RolesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RolesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RolesServiceUpdateRequest, a, b);
    }
}
exports.RolesServiceUpdateRequest = RolesServiceUpdateRequest;
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message scanswift.RolesServicePaginationReq
 */
class RolesServicePaginationReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.ROLE_SORT_KEY sort_key = 5;
     */
    sortKey = ROLE_SORT_KEY.ROLE_SORT_KEY_ID_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.RolesServicePaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ROLE_SORT_KEY) },
    ]);
    static fromBinary(bytes, options) {
        return new RolesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RolesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RolesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RolesServicePaginationReq, a, b);
    }
}
exports.RolesServicePaginationReq = RolesServicePaginationReq;
