"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file templates.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplatesServiceSearchAllReq = exports.TemplatesServiceFilterReq = exports.TemplatePaginationResp = exports.TemplatesServicePaginationReq = exports.TemplatesList = exports.Template = exports.TemplatesServiceUpdateRequest = exports.TemplatesServiceCreateRequest = exports.TEMPLATE_SORT_KEY = exports.TEMPLATE_TYPE = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Stores the available templates
 *
 * @generated from enum scanswift.TEMPLATE_TYPE
 */
var TEMPLATE_TYPE;
(function (TEMPLATE_TYPE) {
    /**
     * Stores an invalid template, which is the default template
     *
     * @generated from enum value: TEMPLATE_TYPE_ANY_UNSPECIFIED = 0;
     */
    TEMPLATE_TYPE[TEMPLATE_TYPE["TEMPLATE_TYPE_ANY_UNSPECIFIED"] = 0] = "TEMPLATE_TYPE_ANY_UNSPECIFIED";
    /**
     * Stores a template for A4 paper, with 0-0-0-0 TRBM margins, and 0mm X margin and 0mm Y margin between QR codes, and 53mm width and 30mm height, with 24mm QR code size, and 12 font size
     *
     * @generated from enum value: TEMPLATE_TYPE_A4_0T0R0B0L_0X0Y_53W_30H_16QR_7F = 1;
     */
    TEMPLATE_TYPE[TEMPLATE_TYPE["TEMPLATE_TYPE_A4_0T0R0B0L_0X0Y_53W_30H_16QR_7F"] = 1] = "TEMPLATE_TYPE_A4_0T0R0B0L_0X0Y_53W_30H_16QR_7F";
})(TEMPLATE_TYPE || (exports.TEMPLATE_TYPE = TEMPLATE_TYPE = {}));
// Retrieve enum metadata with: proto3.getEnumType(TEMPLATE_TYPE)
protobuf_1.proto3.util.setEnumType(TEMPLATE_TYPE, "scanswift.TEMPLATE_TYPE", [
    { no: 0, name: "TEMPLATE_TYPE_ANY_UNSPECIFIED" },
    { no: 1, name: "TEMPLATE_TYPE_A4_0T0R0B0L_0X0Y_53W_30H_16QR_7F" },
]);
/**
 *
 * Describes the available sort keys for retrieving templates
 *
 * @generated from enum scanswift.TEMPLATE_SORT_KEY
 */
var TEMPLATE_SORT_KEY;
(function (TEMPLATE_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: TEMPLATE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    TEMPLATE_SORT_KEY[TEMPLATE_SORT_KEY["TEMPLATE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "TEMPLATE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: TEMPLATE_SORT_KEY_CREATED_AT = 1;
     */
    TEMPLATE_SORT_KEY[TEMPLATE_SORT_KEY["TEMPLATE_SORT_KEY_CREATED_AT"] = 1] = "TEMPLATE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: TEMPLATE_SORT_KEY_MODIFIED_AT = 2;
     */
    TEMPLATE_SORT_KEY[TEMPLATE_SORT_KEY["TEMPLATE_SORT_KEY_MODIFIED_AT"] = 2] = "TEMPLATE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by name
     *
     * @generated from enum value: TEMPLATE_SORT_KEY_NAME = 10;
     */
    TEMPLATE_SORT_KEY[TEMPLATE_SORT_KEY["TEMPLATE_SORT_KEY_NAME"] = 10] = "TEMPLATE_SORT_KEY_NAME";
    /**
     * Fetch ordered results by code
     *
     * @generated from enum value: TEMPLATE_SORT_KEY_CODE = 11;
     */
    TEMPLATE_SORT_KEY[TEMPLATE_SORT_KEY["TEMPLATE_SORT_KEY_CODE"] = 11] = "TEMPLATE_SORT_KEY_CODE";
})(TEMPLATE_SORT_KEY || (exports.TEMPLATE_SORT_KEY = TEMPLATE_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(TEMPLATE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(TEMPLATE_SORT_KEY, "scanswift.TEMPLATE_SORT_KEY", [
    { no: 0, name: "TEMPLATE_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "TEMPLATE_SORT_KEY_CREATED_AT" },
    { no: 2, name: "TEMPLATE_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "TEMPLATE_SORT_KEY_NAME" },
    { no: 11, name: "TEMPLATE_SORT_KEY_CODE" },
]);
/**
 *
 * Describes the necessary data structure during creation of a template
 *
 * @generated from message scanswift.TemplatesServiceCreateRequest
 */
class TemplatesServiceCreateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The name of the template
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Description of the template
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * The template type
     *
     * @generated from field: scanswift.TEMPLATE_TYPE type = 13;
     */
    type = TEMPLATE_TYPE.TEMPLATE_TYPE_ANY_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatesServiceCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(TEMPLATE_TYPE) },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatesServiceCreateRequest, a, b);
    }
}
exports.TemplatesServiceCreateRequest = TemplatesServiceCreateRequest;
/**
 *
 * Describes the data structure to perform the update (draft/revision) operation on a template
 *
 * @generated from message scanswift.TemplatesServiceUpdateRequest
 */
class TemplatesServiceUpdateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The UUID of the resource that needs to be updated
     *
     * @generated from field: string uuid = 2;
     */
    uuid = "";
    /**
     * The name of the template
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Description of the template
     *
     * @generated from field: string description = 12;
     */
    description = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatesServiceUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatesServiceUpdateRequest, a, b);
    }
}
exports.TemplatesServiceUpdateRequest = TemplatesServiceUpdateRequest;
/**
 *
 * Describes the data structure of each template on the platform
 *
 * @generated from message scanswift.Template
 */
class Template extends protobuf_1.Message {
    /**
     * Stores the metadata of this resource
     *
     * @generated from field: scanswift.Metadata metadata = 1;
     */
    metadata;
    /**
     * The name of the template
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * Code of the template
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * Description of the template
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * The template type
     *
     * @generated from field: scanswift.TEMPLATE_TYPE type = 13;
     */
    type = TEMPLATE_TYPE.TEMPLATE_TYPE_ANY_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.Template";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "metadata", kind: "message", T: base_pb_js_1.Metadata },
        { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(TEMPLATE_TYPE) },
    ]);
    static fromBinary(bytes, options) {
        return new Template().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Template().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Template().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Template, a, b);
    }
}
exports.Template = Template;
/**
 *
 * Describes the data structure that stores a list of templates
 *
 * @generated from message scanswift.TemplatesList
 */
class TemplatesList extends protobuf_1.Message {
    /**
     * List of templates
     *
     * @generated from field: repeated scanswift.Template list = 1;
     */
    list = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatesList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "list", kind: "message", T: Template, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatesList, a, b);
    }
}
exports.TemplatesList = TemplatesList;
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message scanswift.TemplatesServicePaginationReq
 */
class TemplatesServicePaginationReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.TEMPLATE_SORT_KEY sort_key = 5;
     */
    sortKey = TEMPLATE_SORT_KEY.TEMPLATE_SORT_KEY_ID_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatesServicePaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(TEMPLATE_SORT_KEY) },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatesServicePaginationReq, a, b);
    }
}
exports.TemplatesServicePaginationReq = TemplatesServicePaginationReq;
/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message scanswift.TemplatePaginationResp
 */
class TemplatePaginationResp extends protobuf_1.Message {
    /**
     * The number of records in this payload
     *
     * @generated from field: int64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: int64 total = 2;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated scanswift.Template payload = 3;
     */
    payload = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatePaginationResp";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 2, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "payload", kind: "message", T: Template, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatePaginationResp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatePaginationResp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatePaginationResp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatePaginationResp, a, b);
    }
}
exports.TemplatePaginationResp = TemplatePaginationResp;
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message scanswift.TemplatesServiceFilterReq
 */
class TemplatesServiceFilterReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.TEMPLATE_SORT_KEY sort_key = 5;
     */
    sortKey = TEMPLATE_SORT_KEY.TEMPLATE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The minimum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_start = 6;
     */
    creationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_end = 7;
     */
    creationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The name of the template
     *
     * @generated from field: string name = 20;
     */
    name = "";
    /**
     * Code of the template
     *
     * @generated from field: string code = 21;
     */
    code = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatesServiceFilterReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(TEMPLATE_SORT_KEY) },
        { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatesServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatesServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatesServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatesServiceFilterReq, a, b);
    }
}
exports.TemplatesServiceFilterReq = TemplatesServiceFilterReq;
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message scanswift.TemplatesServiceSearchAllReq
 */
class TemplatesServiceSearchAllReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: scanswift.TEMPLATE_SORT_KEY sort_key = 5;
     */
    sortKey = TEMPLATE_SORT_KEY.TEMPLATE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * Describes the key with which the search operation needs to be performed
     *
     * @generated from field: string search_key = 11;
     */
    searchKey = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "scanswift.TemplatesServiceSearchAllReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(TEMPLATE_SORT_KEY) },
        { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new TemplatesServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TemplatesServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TemplatesServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TemplatesServiceSearchAllReq, a, b);
    }
}
exports.TemplatesServiceSearchAllReq = TemplatesServiceSearchAllReq;
