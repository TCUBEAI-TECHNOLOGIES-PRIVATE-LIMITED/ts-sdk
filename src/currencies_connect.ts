// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file currencies.proto (package tcube, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CurrenciesList, CurrenciesServiceCreateRequest, CurrenciesServiceFilterReq, CurrenciesServicePaginationReq, CurrenciesServiceSearchAllReq, CurrenciesServiceUpdateRequest, Currency, CurrencyPaginationResp } from "./currencies_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveRequest, CountRequest, CountResponse, Identifier, IdentifierWithUserComment } from "./base_pb.js";

/**
 *
 * Describes the methods applicable on each currency
 *
 * @generated from service tcube.CurrenciesService
 */
export const CurrenciesService = {
  typeName: "tcube.CurrenciesService",
  methods: {
    /**
     * Create a currency
     *
     * @generated from rpc tcube.CurrenciesService.Create
     */
    create: {
      name: "Create",
      I: CurrenciesServiceCreateRequest,
      O: Currency,
      kind: MethodKind.Unary,
    },
    /**
     * Update a currency
     *
     * @generated from rpc tcube.CurrenciesService.Update
     */
    update: {
      name: "Update",
      I: CurrenciesServiceUpdateRequest,
      O: Currency,
      kind: MethodKind.Unary,
    },
    /**
     * Archive the currency
     *
     * @generated from rpc tcube.CurrenciesService.Archive
     */
    archive: {
      name: "Archive",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the currency
     *
     * @generated from rpc tcube.CurrenciesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc tcube.CurrenciesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: Identifier,
      O: Currency,
      kind: MethodKind.Unary,
    },
    /**
     * View all currencies
     *
     * @generated from rpc tcube.CurrenciesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveRequest,
      O: CurrenciesList,
      kind: MethodKind.Unary,
    },
    /**
     * View currencies with pagination
     *
     * @generated from rpc tcube.CurrenciesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: CurrenciesServicePaginationReq,
      O: CurrencyPaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc tcube.CurrenciesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: CurrenciesServiceSearchAllReq,
      O: CurrenciesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc tcube.CurrenciesService.Filter
     */
    filter: {
      name: "Filter",
      I: CurrenciesServiceFilterReq,
      O: CurrenciesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count
     *
     * @generated from rpc tcube.CurrenciesService.Count
     */
    count: {
      name: "Count",
      I: CountRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

