// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file customers.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Customer, CustomerPaginationResp, CustomersList, CustomersServiceCreateRequest, CustomersServiceFilterReq, CustomersServicePaginationReq, CustomersServiceSearchAllReq, CustomersServiceUpdateRequest } from "./customers_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveInEntityRequest, CountInEntityRequest, CountResponse, Identifier, IdentifierWithUserComment } from "./base_pb.js";

/**
 *
 * Describes the methods applicable on each customer
 *
 * @generated from service scanswift.CustomersService
 */
export const CustomersService = {
  typeName: "scanswift.CustomersService",
  methods: {
    /**
     * Create a customer
     *
     * @generated from rpc scanswift.CustomersService.Create
     */
    create: {
      name: "Create",
      I: CustomersServiceCreateRequest,
      O: Customer,
      kind: MethodKind.Unary,
    },
    /**
     * Update a customer
     *
     * @generated from rpc scanswift.CustomersService.Update
     */
    update: {
      name: "Update",
      I: CustomersServiceUpdateRequest,
      O: Customer,
      kind: MethodKind.Unary,
    },
    /**
     * Archive the customer
     *
     * @generated from rpc scanswift.CustomersService.Archive
     */
    archive: {
      name: "Archive",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the customer
     *
     * @generated from rpc scanswift.CustomersService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc scanswift.CustomersService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: Identifier,
      O: Customer,
      kind: MethodKind.Unary,
    },
    /**
     * View all customers
     *
     * @generated from rpc scanswift.CustomersService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveInEntityRequest,
      O: CustomersList,
      kind: MethodKind.Unary,
    },
    /**
     * View customers with pagination
     *
     * @generated from rpc scanswift.CustomersService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: CustomersServicePaginationReq,
      O: CustomerPaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc scanswift.CustomersService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: CustomersServiceSearchAllReq,
      O: CustomersList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc scanswift.CustomersService.Filter
     */
    filter: {
      name: "Filter",
      I: CustomersServiceFilterReq,
      O: CustomersList,
      kind: MethodKind.Unary,
    },
    /**
     * Count
     *
     * @generated from rpc scanswift.CustomersService.Count
     */
    count: {
      name: "Count",
      I: CountInEntityRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

