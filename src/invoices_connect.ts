// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file invoices.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Invoice, InvoicePaginationResp, InvoicesList, InvoicesServiceCreateRequest, InvoicesServiceFilterReq, InvoicesServicePaginationReq, InvoicesServicePaymentRequest, InvoicesServiceSearchAllReq, InvoicesServiceUpdateRequest } from "./invoices_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveInEntityRequest, CountInEntityRequest, CountResponse, FileResponse, Identifier, IdentifierWithUserComment, SearchKeyRequest, URLResponse } from "./base_pb.js";

/**
 *
 * Describes the methods applicable on each invoice
 *
 * @generated from service scanswift.InvoicesService
 */
export const InvoicesService = {
  typeName: "scanswift.InvoicesService",
  methods: {
    /**
     * Create a invoice
     *
     * @generated from rpc scanswift.InvoicesService.Create
     */
    create: {
      name: "Create",
      I: InvoicesServiceCreateRequest,
      O: Invoice,
      kind: MethodKind.Unary,
    },
    /**
     * Update a invoice
     *
     * @generated from rpc scanswift.InvoicesService.Update
     */
    update: {
      name: "Update",
      I: InvoicesServiceUpdateRequest,
      O: Invoice,
      kind: MethodKind.Unary,
    },
    /**
     * Archive the invoice
     *
     * @generated from rpc scanswift.InvoicesService.Archive
     */
    archive: {
      name: "Archive",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the invoice
     *
     * @generated from rpc scanswift.InvoicesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel the invoice
     *
     * @generated from rpc scanswift.InvoicesService.Cancel
     */
    cancel: {
      name: "Cancel",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Mark the invoice as successfully paid
     *
     * @generated from rpc scanswift.InvoicesService.PaymentSuccess
     */
    paymentSuccess: {
      name: "PaymentSuccess",
      I: InvoicesServicePaymentRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Transaction failed during payment
     *
     * @generated from rpc scanswift.InvoicesService.PaymentFailure
     */
    paymentFailure: {
      name: "PaymentFailure",
      I: InvoicesServicePaymentRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc scanswift.InvoicesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: Identifier,
      O: Invoice,
      kind: MethodKind.Unary,
    },
    /**
     * View by Code
     *
     * @generated from rpc scanswift.InvoicesService.ViewByCode
     */
    viewByCode: {
      name: "ViewByCode",
      I: SearchKeyRequest,
      O: Invoice,
      kind: MethodKind.Unary,
    },
    /**
     * View all invoices
     *
     * @generated from rpc scanswift.InvoicesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveInEntityRequest,
      O: InvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View invoices with pagination
     *
     * @generated from rpc scanswift.InvoicesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: InvoicesServicePaginationReq,
      O: InvoicePaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * Retrieve the payment link
     *
     * @generated from rpc scanswift.InvoicesService.ViewPaymentLink
     */
    viewPaymentLink: {
      name: "ViewPaymentLink",
      I: Identifier,
      O: URLResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the invoice as a PDF
     *
     * @generated from rpc scanswift.InvoicesService.DownloadAsPDF
     */
    downloadAsPDF: {
      name: "DownloadAsPDF",
      I: Identifier,
      O: FileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc scanswift.InvoicesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: InvoicesServiceSearchAllReq,
      O: InvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc scanswift.InvoicesService.Filter
     */
    filter: {
      name: "Filter",
      I: InvoicesServiceFilterReq,
      O: InvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count
     *
     * @generated from rpc scanswift.InvoicesService.Count
     */
    count: {
      name: "Count",
      I: CountInEntityRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

