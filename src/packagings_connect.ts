// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file packagings.proto (package tcube, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Packaging, PackagingPaginationResp, PackagingsList, PackagingsSerialsList, PackagingsServiceAddSerialsRequest, PackagingsServiceCreateRequest, PackagingsServiceFilterReq, PackagingsServicePaginationReq, PackagingsServiceSearchAllReq } from "./packagings_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveInEntityRequest, CountInEntityRequest, CountResponse, FileResponse, Identifier, IdentifierWithUserComment, ImageResponse, SearchKeyRequest, StringResponse, URLResponse } from "./base_pb.js";

/**
 *
 * Describes the methods applicable on each packaging
 *
 * @generated from service tcube.PackagingsService
 */
export const PackagingsService = {
  typeName: "tcube.PackagingsService",
  methods: {
    /**
     * Create a packaging
     *
     * // Update a packaging
     * rpc Update (PackagingsServiceUpdateRequest) returns (Packaging);
     *
     * @generated from rpc tcube.PackagingsService.Create
     */
    create: {
      name: "Create",
      I: PackagingsServiceCreateRequest,
      O: Packaging,
      kind: MethodKind.Unary,
    },
    /**
     * Close the packaging
     *
     * @generated from rpc tcube.PackagingsService.Close
     */
    close: {
      name: "Close",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Archive the packaging
     *
     * @generated from rpc tcube.PackagingsService.Archive
     */
    archive: {
      name: "Archive",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the packaging
     *
     * @generated from rpc tcube.PackagingsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Recall the packaging
     *
     * @generated from rpc tcube.PackagingsService.Recall
     */
    recall: {
      name: "Recall",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc tcube.PackagingsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: Identifier,
      O: Packaging,
      kind: MethodKind.Unary,
    },
    /**
     * View by Code
     *
     * @generated from rpc tcube.PackagingsService.ViewByCode
     */
    viewByCode: {
      name: "ViewByCode",
      I: SearchKeyRequest,
      O: Packaging,
      kind: MethodKind.Unary,
    },
    /**
     * View all packagings
     *
     * @generated from rpc tcube.PackagingsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveInEntityRequest,
      O: PackagingsList,
      kind: MethodKind.Unary,
    },
    /**
     * View packagings with pagination
     *
     * @generated from rpc tcube.PackagingsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: PackagingsServicePaginationReq,
      O: PackagingPaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * View as QR code
     *
     * @generated from rpc tcube.PackagingsService.ViewAsQR
     */
    viewAsQR: {
      name: "ViewAsQR",
      I: Identifier,
      O: ImageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View as DataMatrix
     *
     * @generated from rpc tcube.PackagingsService.ViewAsDataMatrix
     */
    viewAsDataMatrix: {
      name: "ViewAsDataMatrix",
      I: Identifier,
      O: ImageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View as Image on the basis of the product's configuration
     *
     * @generated from rpc tcube.PackagingsService.ViewAsImage
     */
    viewAsImage: {
      name: "ViewAsImage",
      I: Identifier,
      O: ImageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View the packaging's URI
     *
     * @generated from rpc tcube.PackagingsService.ViewAsURI
     */
    viewAsURI: {
      name: "ViewAsURI",
      I: Identifier,
      O: URLResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View the string that can be used to render the QR code on POS machines
     *
     * @generated from rpc tcube.PackagingsService.ViewPrintableString
     */
    viewPrintableString: {
      name: "ViewPrintableString",
      I: Identifier,
      O: StringResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the packaging as a PDF
     *
     * @generated from rpc tcube.PackagingsService.DownloadAsPDF
     */
    downloadAsPDF: {
      name: "DownloadAsPDF",
      I: Identifier,
      O: FileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc tcube.PackagingsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: PackagingsServiceSearchAllReq,
      O: PackagingsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc tcube.PackagingsService.Filter
     */
    filter: {
      name: "Filter",
      I: PackagingsServiceFilterReq,
      O: PackagingsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count
     *
     * @generated from rpc tcube.PackagingsService.Count
     */
    count: {
      name: "Count",
      I: CountInEntityRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add list of serials to a packaging
     *
     * @generated from rpc tcube.PackagingsService.AddSerials
     */
    addSerials: {
      name: "AddSerials",
      I: PackagingsServiceAddSerialsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Remove serial (represented by the UUID of the associated packaging serial) from packaging and return the removed identifier
     *
     * @generated from rpc tcube.PackagingsService.RemoveSerial
     */
    removeSerial: {
      name: "RemoveSerial",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View all serials associated with the packaging represented by the Identifier
     *
     * @generated from rpc tcube.PackagingsService.ViewSerials
     */
    viewSerials: {
      name: "ViewSerials",
      I: Identifier,
      O: PackagingsSerialsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count all serials within a packaging
     *
     * @generated from rpc tcube.PackagingsService.CountSerials
     */
    countSerials: {
      name: "CountSerials",
      I: Identifier,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

