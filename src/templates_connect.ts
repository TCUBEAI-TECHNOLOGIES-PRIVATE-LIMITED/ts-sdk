// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file templates.proto (package scanswift, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Template, TemplatePaginationResp, TemplatesList, TemplatesServiceCreateRequest, TemplatesServiceFilterReq, TemplatesServicePaginationReq, TemplatesServiceSearchAllReq, TemplatesServiceUpdateRequest } from "./templates_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveRequest, CountRequest, CountResponse, Identifier, IdentifierWithUserComment } from "./base_pb.js";

/**
 *
 * Describes the methods applicable on each template
 *
 * @generated from service scanswift.TemplatesService
 */
export const TemplatesService = {
  typeName: "scanswift.TemplatesService",
  methods: {
    /**
     * Create a template
     *
     * @generated from rpc scanswift.TemplatesService.Create
     */
    create: {
      name: "Create",
      I: TemplatesServiceCreateRequest,
      O: Template,
      kind: MethodKind.Unary,
    },
    /**
     * Update a template
     *
     * @generated from rpc scanswift.TemplatesService.Update
     */
    update: {
      name: "Update",
      I: TemplatesServiceUpdateRequest,
      O: Template,
      kind: MethodKind.Unary,
    },
    /**
     * Archive the template
     *
     * @generated from rpc scanswift.TemplatesService.Archive
     */
    archive: {
      name: "Archive",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the template
     *
     * @generated from rpc scanswift.TemplatesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc scanswift.TemplatesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: Identifier,
      O: Template,
      kind: MethodKind.Unary,
    },
    /**
     * View all templates
     *
     * @generated from rpc scanswift.TemplatesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveRequest,
      O: TemplatesList,
      kind: MethodKind.Unary,
    },
    /**
     * View templates with pagination
     *
     * @generated from rpc scanswift.TemplatesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: TemplatesServicePaginationReq,
      O: TemplatePaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc scanswift.TemplatesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: TemplatesServiceSearchAllReq,
      O: TemplatesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc scanswift.TemplatesService.Filter
     */
    filter: {
      name: "Filter",
      I: TemplatesServiceFilterReq,
      O: TemplatesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count
     *
     * @generated from rpc scanswift.TemplatesService.Count
     */
    count: {
      name: "Count",
      I: CountRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

